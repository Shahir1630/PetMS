@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    <li>
        <a  class="nav-link text-dark" asp-action="MyPets" asp-controller="Pet">My Pet</a>
    </li>
    
    <li>
        <a class="nav-link text-dark" asp-action="Index" asp-controller="WatchList"><i class="fas fa-binoculars"></i>My WatchList</a>
    </li>

    <li>
        <span class="badge bg-danger notification-count" id="notificationCount" data-toggle="popover" title="Notifications"></span>
        <i class="fas fa-globe-americas"></i>
    </li>

    <li class="nav-item">
        <a  class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @User.Identity.Name!</a>
    </li>
    <li class="nav-item">
        <form  class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button  type="submit" class="nav-link btn btn-link text-dark">Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>
